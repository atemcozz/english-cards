{"ast":null,"code":"import _toConsumableArray from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/atemcozz/Desktop/Practice/React/english-cards/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import\"./App.css\";import React from\"react\";import Card from\"./Card\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={id:0,word:\"\",translation:\"\",cards:[]};return _this;}_createClass(App,[{key:\"updateInput\",value:function updateInput(key,value){this.setState(_defineProperty({},key,value));}},{key:\"addCard\",value:function addCard(){var newCard={id:1+this.state.id,value:{word:this.state.word.slice(),translation:this.state.translation.slice(),flipped:false}};this.setState({id:newCard.id,word:\"\",translation:\"\",cards:[].concat(_toConsumableArray(this.state.cards),[newCard])});}},{key:\"turnCard\",value:function turnCard(id){var cards=_toConsumableArray(this.state.cards);var index=cards.findIndex(function(card){return card.id===id;});cards[index].value.flipped=!cards[index].value.flipped;this.updateInput(\"cards\",cards);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"\\u041A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0438 \\u0430\\u043D\\u0433\\u043B\\u0438\\u0439\\u0441\\u043A\\u0438\\u0445 \\u0441\\u043B\\u043E\\u0432\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input__container\",children:[\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u0430\\u0440\\u0442\\u043E\\u0447\\u043A\\u0443\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\",value:this.state.word,onChange:function onChange(event){return _this2.updateInput(\"word\",event.target.value);}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u043E\",value:this.state.translation,onChange:function onChange(event){_this2.updateInput(\"translation\",event.target.value);}}),/*#__PURE__*/_jsx(\"div\",{className:\"btn add-btn\",onClick:function onClick(){if(_this2.state.translation!==\"\"&&_this2.state.word!==\"\")_this2.addCard();},children:\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"cards__container\",children:this.state.cards.map(function(card){return/*#__PURE__*/_jsx(Card,{card:card,app:_this2},card.id);})})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"names":["React","Card","App","props","state","id","word","translation","cards","key","value","setState","newCard","slice","flipped","index","findIndex","card","updateInput","event","target","addCard","map","Component"],"sources":["/home/atemcozz/Desktop/Practice/React/english-cards/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React from \"react\";\nimport Card from \"./Card\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 0,\n      word: \"\",\n      translation: \"\",\n      cards: [],\n    };\n  }\n  updateInput(key, value) {\n    this.setState({\n      [key]: value,\n    });\n  }\n  addCard() {\n    const newCard = {\n      id: 1 + this.state.id,\n      value: {\n        word: this.state.word.slice(),\n        translation: this.state.translation.slice(),\n        flipped: false,\n      },\n    };\n    this.setState({\n      id: newCard.id,\n      word: \"\",\n      translation: \"\",\n      cards: [...this.state.cards, newCard],\n    });\n  }\n  turnCard(id) {\n    const cards = [...this.state.cards];\n    let index = cards.findIndex((card) => {\n      return card.id === id;\n    });\n    cards[index].value.flipped = !cards[index].value.flipped;\n    this.updateInput(\"cards\", cards);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">Карточки английских слов</h1>\n        <div className=\"input__container\">\n          Добавить карточку\n          <br />\n          <input\n            type=\"text\"\n            placeholder=\"Введите слово\"\n            value={this.state.word}\n            onChange={(event) => this.updateInput(\"word\", event.target.value)}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Введите слово\"\n            value={this.state.translation}\n            onChange={(event) => {\n              this.updateInput(\"translation\", event.target.value);\n            }}\n          />\n          <div\n            className=\"btn add-btn\"\n            onClick={() => {\n              if (this.state.translation !== \"\" && this.state.word !== \"\")\n                this.addCard();\n            }}\n          >\n            Добавить\n          </div>\n        </div>\n        <div className=\"cards__container\">\n          {this.state.cards.map((card) => {\n            return <Card key={card.id} card={card} app={this} />;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"gzBAAA,MAAO,WAAP,CACA,MAAOA,MAAP,KAAkB,OAAlB,CACA,MAAOC,KAAP,KAAiB,QAAjB,C,2FAEMC,I,sGACJ,aAAYC,KAAZ,CAAmB,qCACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,EAAE,CAAE,CADO,CAEXC,IAAI,CAAE,EAFK,CAGXC,WAAW,CAAE,EAHF,CAIXC,KAAK,CAAE,EAJI,CAAb,CAFiB,aAQlB,C,2CACD,qBAAYC,GAAZ,CAAiBC,KAAjB,CAAwB,CACtB,KAAKC,QAAL,oBACGF,GADH,CACSC,KADT,GAGD,C,uBACD,kBAAU,CACR,GAAME,QAAO,CAAG,CACdP,EAAE,CAAE,EAAI,KAAKD,KAAL,CAAWC,EADL,CAEdK,KAAK,CAAE,CACLJ,IAAI,CAAE,KAAKF,KAAL,CAAWE,IAAX,CAAgBO,KAAhB,EADD,CAELN,WAAW,CAAE,KAAKH,KAAL,CAAWG,WAAX,CAAuBM,KAAvB,EAFR,CAGLC,OAAO,CAAE,KAHJ,CAFO,CAAhB,CAQA,KAAKH,QAAL,CAAc,CACZN,EAAE,CAAEO,OAAO,CAACP,EADA,CAEZC,IAAI,CAAE,EAFM,CAGZC,WAAW,CAAE,EAHD,CAIZC,KAAK,8BAAM,KAAKJ,KAAL,CAAWI,KAAjB,GAAwBI,OAAxB,EAJO,CAAd,EAMD,C,wBACD,kBAASP,EAAT,CAAa,CACX,GAAMG,MAAK,oBAAO,KAAKJ,KAAL,CAAWI,KAAlB,CAAX,CACA,GAAIO,MAAK,CAAGP,KAAK,CAACQ,SAAN,CAAgB,SAACC,IAAD,CAAU,CACpC,MAAOA,KAAI,CAACZ,EAAL,GAAYA,EAAnB,CACD,CAFW,CAAZ,CAGAG,KAAK,CAACO,KAAD,CAAL,CAAaL,KAAb,CAAmBI,OAAnB,CAA6B,CAACN,KAAK,CAACO,KAAD,CAAL,CAAaL,KAAb,CAAmBI,OAAjD,CACA,KAAKI,WAAL,CAAiB,OAAjB,CAA0BV,KAA1B,EACD,C,sBACD,iBAAS,iBACP,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,WAAI,SAAS,CAAC,WAAd,oJADF,cAEE,aAAK,SAAS,CAAC,kBAAf,4HAEE,aAFF,cAGE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,2EAFd,CAGE,KAAK,CAAE,KAAKJ,KAAL,CAAWE,IAHpB,CAIE,QAAQ,CAAE,kBAACa,KAAD,QAAW,OAAI,CAACD,WAAL,CAAiB,MAAjB,CAAyBC,KAAK,CAACC,MAAN,CAAaV,KAAtC,CAAX,EAJZ,EAHF,cASE,cACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,2EAFd,CAGE,KAAK,CAAE,KAAKN,KAAL,CAAWG,WAHpB,CAIE,QAAQ,CAAE,kBAACY,KAAD,CAAW,CACnB,MAAI,CAACD,WAAL,CAAiB,aAAjB,CAAgCC,KAAK,CAACC,MAAN,CAAaV,KAA7C,EACD,CANH,EATF,cAiBE,YACE,SAAS,CAAC,aADZ,CAEE,OAAO,CAAE,kBAAM,CACb,GAAI,MAAI,CAACN,KAAL,CAAWG,WAAX,GAA2B,EAA3B,EAAiC,MAAI,CAACH,KAAL,CAAWE,IAAX,GAAoB,EAAzD,CACE,MAAI,CAACe,OAAL,GACH,CALH,8DAjBF,GAFF,cA6BE,YAAK,SAAS,CAAC,kBAAf,UACG,KAAKjB,KAAL,CAAWI,KAAX,CAAiBc,GAAjB,CAAqB,SAACL,IAAD,CAAU,CAC9B,mBAAO,KAAC,IAAD,EAAoB,IAAI,CAAEA,IAA1B,CAAgC,GAAG,CAAE,MAArC,EAAWA,IAAI,CAACZ,EAAhB,CAAP,CACD,CAFA,CADH,EA7BF,GADF,CAqCD,C,iBA7EeL,KAAK,CAACuB,S,EAgFxB,cAAerB,IAAf"},"metadata":{},"sourceType":"module"}